[{"/Users/twn/Desktop/cf-analyzer-new/src/index.js":"1","/Users/twn/Desktop/cf-analyzer-new/src/serviceWorker.js":"2","/Users/twn/Desktop/cf-analyzer-new/src/pages/_app.tsx":"3","/Users/twn/Desktop/cf-analyzer-new/src/util/analytics.ts":"4","/Users/twn/Desktop/cf-analyzer-new/src/pages/index.tsx":"5","/Users/twn/Desktop/cf-analyzer-new/src/pages/about.tsx":"6","/Users/twn/Desktop/cf-analyzer-new/src/pages/faq.tsx":"7","/Users/twn/Desktop/cf-analyzer-new/src/pages/pricing.tsx":"8","/Users/twn/Desktop/cf-analyzer-new/src/pages/not-found.tsx":"9","/Users/twn/Desktop/cf-analyzer-new/src/pages/contact.tsx":"10","/Users/twn/Desktop/cf-analyzer-new/src/pages/analyze.tsx":"11","/Users/twn/Desktop/cf-analyzer-new/src/util/router.tsx":"12","/Users/twn/Desktop/cf-analyzer-new/src/util/theme.tsx":"13","/Users/twn/Desktop/cf-analyzer-new/src/components/Footer.tsx":"14","/Users/twn/Desktop/cf-analyzer-new/src/components/Navbar.tsx":"15","/Users/twn/Desktop/cf-analyzer-new/src/components/FeaturesSection.tsx":"16","/Users/twn/Desktop/cf-analyzer-new/src/components/TestimonialsSection.tsx":"17","/Users/twn/Desktop/cf-analyzer-new/src/components/ClientsSection.tsx":"18","/Users/twn/Desktop/cf-analyzer-new/src/components/CtaSection.tsx":"19","/Users/twn/Desktop/cf-analyzer-new/src/components/HeroSection.tsx":"20","/Users/twn/Desktop/cf-analyzer-new/src/components/HeroSection2.tsx":"21","/Users/twn/Desktop/cf-analyzer-new/src/components/StatsSection.tsx":"22","/Users/twn/Desktop/cf-analyzer-new/src/components/NewsletterSection.tsx":"23","/Users/twn/Desktop/cf-analyzer-new/src/components/FaqSection.tsx":"24","/Users/twn/Desktop/cf-analyzer-new/src/components/TeamBiosSection.tsx":"25","/Users/twn/Desktop/cf-analyzer-new/src/components/PricingSection.tsx":"26","/Users/twn/Desktop/cf-analyzer-new/src/components/ContactSection.tsx":"27","/Users/twn/Desktop/cf-analyzer-new/src/components/Section.tsx":"28","/Users/twn/Desktop/cf-analyzer-new/src/custom_components/google_maps_place.tsx":"29","/Users/twn/Desktop/cf-analyzer-new/src/components/SectionHeader.tsx":"30","/Users/twn/Desktop/cf-analyzer-new/src/components/AspectRatio.tsx":"31","/Users/twn/Desktop/cf-analyzer-new/src/components/Newsletter.tsx":"32","/Users/twn/Desktop/cf-analyzer-new/src/components/Contact.tsx":"33","/Users/twn/Desktop/cf-analyzer-new/src/components/BackgroundImage.tsx":"34","/Users/twn/Desktop/cf-analyzer-new/src/util/newsletter.ts":"35","/Users/twn/Desktop/cf-analyzer-new/src/util/contact.ts":"36","/Users/twn/Desktop/cf-analyzer-new/src/util/util.ts":"37","/Users/twn/Desktop/cf-analyzer-new/src/util/firebase.ts":"38"},{"size":437,"mtime":1611200031788,"results":"39","hashOfConfig":"40"},{"size":4971,"mtime":1611200031795,"results":"41","hashOfConfig":"40"},{"size":2182,"mtime":1612052089301,"results":"42","hashOfConfig":"40"},{"size":630,"mtime":1611245464950,"results":"43","hashOfConfig":"40"},{"size":2240,"mtime":1611244059481,"results":"44","hashOfConfig":"40"},{"size":1297,"mtime":1611244059621,"results":"45","hashOfConfig":"40"},{"size":323,"mtime":1611719920564,"results":"46","hashOfConfig":"40"},{"size":404,"mtime":1611719915378,"results":"47","hashOfConfig":"40"},{"size":312,"mtime":1611244059480,"results":"48","hashOfConfig":"40"},{"size":414,"mtime":1611244059509,"results":"49","hashOfConfig":"40"},{"size":21192,"mtime":1612061747219,"results":"50","hashOfConfig":"40"},{"size":2723,"mtime":1611452394046,"results":"51","hashOfConfig":"40"},{"size":3147,"mtime":1611375476567,"results":"52","hashOfConfig":"40"},{"size":3835,"mtime":1611244871817,"results":"53","hashOfConfig":"40"},{"size":3925,"mtime":1611245725822,"results":"54","hashOfConfig":"40"},{"size":3250,"mtime":1611244027604,"results":"55","hashOfConfig":"40"},{"size":2998,"mtime":1611244059481,"results":"56","hashOfConfig":"40"},{"size":1580,"mtime":1611200390775,"results":"57","hashOfConfig":"40"},{"size":1380,"mtime":1611244909924,"results":"58","hashOfConfig":"40"},{"size":986,"mtime":1611244902277,"results":"59","hashOfConfig":"40"},{"size":660,"mtime":1611244059666,"results":"60","hashOfConfig":"40"},{"size":1350,"mtime":1611245269347,"results":"61","hashOfConfig":"40"},{"size":1137,"mtime":1611244059622,"results":"62","hashOfConfig":"40"},{"size":3462,"mtime":1611244018707,"results":"63","hashOfConfig":"40"},{"size":3656,"mtime":1611244059688,"results":"64","hashOfConfig":"40"},{"size":5287,"mtime":1611245834594,"results":"65","hashOfConfig":"40"},{"size":797,"mtime":1611200705752,"results":"66","hashOfConfig":"40"},{"size":2546,"mtime":1611245241006,"results":"67","hashOfConfig":"40"},{"size":7620,"mtime":1612221341397,"results":"68","hashOfConfig":"40"},{"size":1386,"mtime":1611245254280,"results":"69","hashOfConfig":"40"},{"size":768,"mtime":1611200273534,"results":"70","hashOfConfig":"40"},{"size":1941,"mtime":1611245002520,"results":"71","hashOfConfig":"40"},{"size":3572,"mtime":1611244835273,"results":"72","hashOfConfig":"40"},{"size":664,"mtime":1611200351589,"results":"73","hashOfConfig":"40"},{"size":152,"mtime":1611246013818,"results":"74","hashOfConfig":"40"},{"size":381,"mtime":1611245671440,"results":"75","hashOfConfig":"40"},{"size":1107,"mtime":1611246129983,"results":"76","hashOfConfig":"40"},{"size":370,"mtime":1611200031798,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1b8kcgg",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"/Users/twn/Desktop/cf-analyzer-new/src/index.js",[],["161","162"],"/Users/twn/Desktop/cf-analyzer-new/src/serviceWorker.js",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/_app.tsx",[],["163","164"],"/Users/twn/Desktop/cf-analyzer-new/src/util/analytics.ts",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/index.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/about.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/faq.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/pricing.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/not-found.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/contact.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/pages/analyze.tsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import _ from \"lodash\";\nimport React, { useEffect, useMemo } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { AppBar, Box, InputAdornment, makeStyles, Tab, Tabs, TextField, TextFieldProps, Theme, Tooltip, Typography, useTheme } from \"@material-ui/core\";\nimport { Help } from \"@material-ui/icons\";\nimport * as yup from \"yup\";\nimport NumberFormat from \"react-number-format\";\nimport { useFormik } from \"formik\";\nimport { stringify } from \"querystring\";\nimport { useRouter } from \"../util/router\";\nimport { GoogleMaps as GoogleMapsSearchBar } from \"../custom_components/google_maps_place\";\n\ntype FormField = {\n  id: string,\n  label: string,\n  inputType: string,\n  gridWidth: number,\n  defaultValue: number | string,\n  required?: boolean,\n  startAdornment?: string,\n  endAdornment?: string,\n  helperText?: string[],\n  formatWithCommas?: boolean,\n  validator?: yup.BaseSchema,\n};\n\ntype TabType = {\n  tabTitle: string,\n  formFields: FormField[],\n}\n\nfunction Paragraphs(props: { paragraphs: string[] }) {\n  return (\n    <>\n      {_.map(props.paragraphs, (p: string, idx: number) => (\n        // TODO: Consider using standard MUI styling\n        <p key={idx} style={{ fontSize: '0.8rem' }}>\n          {p}\n        </p>\n      ))}\n    </>\n  );\n}\n\nfunction NumberFieldWithCommas(props: any) {\n  return (\n    <NumberFormat\n      isNumericString={true}\n      thousandSeparator={true}\n      customInput={TextField}\n      {...props}\n    />\n  );\n}\n\nconst stringToNumberYupTransformer = (_: any, val: any) => parseInt(val.replace(/,/, ''));\n\nconst TABS: TabType[] = [\n  // TODO: Consider allowing users to populate certain fields this from saved settings\n  {\n    tabTitle: 'Purchase Details',\n    formFields: [\n      // TODO: Integrate with Google Maps API\n      // https://material-ui.com/components/autocomplete/#google-maps-place\n      {\n        id: 'property_address',\n        label: 'Property Address',\n        inputType: 'text',\n        gridWidth: 4,\n        required: true,\n        defaultValue: '',\n        startAdornment: '🏠',\n        validator: yup\n        .string()\n        .required(),\n      },\n      {\n        id: 'purchase_price',\n        label: 'Purchase Price',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        defaultValue: '',\n        startAdornment: '$',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Purchase Price must be greater than or equal to $${min}.')\n          .required()\n      },\n      // TODO: Convert to toggle, then conditionally show more fields\n      {\n        id: 'is_rehab',\n        label: 'Rehab?',\n        inputType: 'text',\n        gridWidth: 2,\n        defaultValue: 'No',\n        validator: yup\n          .string()\n          .oneOf(['Yes', 'yes', 'No', 'no'], 'Must be either \"Yes\" or \"No\"')\n      },\n    ],\n  },\n  {\n    tabTitle: 'Loan Details',\n    formFields: [\n      // TODO: Consider adding as buttons or dropdown later\n      // {\n      //   id: 'loan_type',\n      //   label: 'Loan Type',\n      //   inputType: 'text',\n      //   gridWidth: 3,\n      //   defaultValue: '',\n      //   required: true,\n      //   validator: yup.string().required(),\n      // },\n      // TODO: Maybe remove or make radio buttons\n      {\n        id: 'term',\n        label: 'Loan Term',\n        inputType: 'number',\n        gridWidth: 2,\n        required: true,\n        defaultValue: '30',\n        endAdornment: 'Years',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .test({\n            test: (v: any) => v === 30 || v === 15,\n            message: 'Term must be either 15 or 30 years'\n          })\n          .required()\n      },\n      {\n        id: 'percentage_down',\n        label: 'Down Payment',\n        inputType: 'number',\n        gridWidth: 2,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '20',\n        endAdornment: '%',\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Down Payment Percentage must be greater than or equal to ${min}%.')\n          .max(100, 'Down Payment Percentage must be less than or equal to ${max}%.')\n          .required(),\n        // TODO: Do we want this helper text?\n        // helperText: [\n        //   `Please note that PMI is not calculated or incorporated into the analysis regardless\n        //   of the down payment percentage.`,\n        // ],\n      },\n      {\n        id: 'interest_rate',\n        label: 'Interest Rate',\n        inputType: 'number',\n        gridWidth: 2,\n        required: true,\n        defaultValue: '2.75',\n        formatWithCommas: true,\n        endAdornment: '%',\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Interest Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Interest Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n      // TODO: Consider breaking this out into financed/not financed\n      // TODO: Consider adding helper text to describe closing costs and mention that mortgage points should be included here\n      {\n        id: 'closing_costs',\n        label: 'Closing Costs',\n        inputType: 'number',\n        gridWidth: 2,\n        defaultValue: '0',\n        startAdornment: '$',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Closing Costs must be greater than or equal to $${min}.')\n      },\n      // TODO: Convert to toggle, share component/structure with is_rehab\n      {\n        id: 'closing_costs_financed',\n        label: 'Financing Closing Costs?',\n        inputType: 'text',\n        gridWidth: 4,\n        defaultValue: 'No',\n        validator: yup\n          .string()\n          .oneOf(['Yes', 'yes', 'No', 'no'], 'Must be either \"Yes\" or \"No\"')\n      },\n    ],\n  },\n  {\n    tabTitle: 'Fixed Income and Expenses',\n    formFields: [\n      {\n        id: 'monthly_rent',\n        label: 'Monthly Rent',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        defaultValue: '',\n        startAdornment: '$',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Monthly Rent must be greater than or equal to $${min}.')\n          .required()\n      },\n      // TODO: This needs to be a dollar amount or tied to dollar amount field\n      {\n        id: 'annual_taxes',\n        label: 'Annual Taxes',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        defaultValue: '',\n        startAdornment: '$',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Annual Taxes must be greater than or equal to $${min}.')\n          .required()\n      },\n      {\n        id: 'monthly_insurance',\n        label: 'Monthly Insurance Expense',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        defaultValue: '200',\n        startAdornment: '$',\n        formatWithCommas: true,\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Monthly Insurance Expense must be greater than or equal to $${min}.')\n          .required()\n      },\n    ],\n  },\n  {\n    tabTitle: 'Variable Expenses',\n    formFields: [\n      // TODO: Consider adding post-vacancy toggle\n      {\n        id: 'capex_rate',\n        label: 'CapEx Rate',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '5',\n        endAdornment: '%',\n        helperText: [\n          `Capital Expenditures (Capex) Rate is calculated as the annual cost of major expenditures\n          (ex: replacing the roof, a new water heater, etc.) divided by the gross annual rental\n          income. It will vary greatly from property to property depending on age, location, cost\n          and other factors.`,\n          `Generally, setting aside 5-10% of rental income for CapEx is a good rule of thumb.`,\n        ],\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Capex Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Capex Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n      // TODO: Consider adding post-vacancy toggle\n      {\n        id: 'repairs_rate',\n        label: 'Repairs & Maintenance Rate',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '5',\n        endAdornment: '%',\n        helperText: [\n          `Repairs & Maintenance Rate is calculated as the annual cost of property repairs\n          (ex: a broken window, fixing the dishwasher, etc.) divided by the gross annual rental\n          income.`,\n          `Generally, setting aside 5-10% of rental income for repairs is a good\n          rule of thumb.`\n        ],\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Repairs Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Repairs Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n      {\n        id: 'vacancy_rate',\n        label: 'Vacancy Rate',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '5',\n        endAdornment: '%',\n        helperText: [\n          `Vacancy Rate is calculated as the percentage of time your property sits empty due\n          to tentant turnover. This figure will vary depending on the property's location and\n          condition, so talk to a local agent or investor to gain a better understanding of\n          expected vacancy.`,\n          `Typical vacancy rates range from 3-10%.`\n        ],\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Vacancy Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Vacancy Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n      // TODO: Consider adding post-vacancy toggle\n      {\n        id: 'property_management_rate',\n        label: 'Property Management Rate',\n        inputType: 'number',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '12',\n        endAdornment: '%',\n        helperText: [\n          `Property Management Rate is expressed as a percentage of total rental income and\n          represents the amount charged by the property manager to manage your property.`,\n          `Typical property management fees range from 9-12% depending on the market and\n          services provided.`,\n          `Enter '0' if you plan on managing your property yourself.`\n        ],\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Property Management Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Property Management Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n    ],\n  },\n  {\n    tabTitle: 'Growth Assumptions',\n    formFields: [\n      {\n        id: 'appreciation_rate',\n        label: 'Annual Appreciation Rate',\n        inputType: 'text',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '2',\n        endAdornment: '%',\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Annual Appreciation Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Annual Appreciation Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n      {\n        id: 'rent_growth',\n        label: 'Annual Rent Growth',\n        inputType: 'text',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '2',\n        endAdornment: '%',\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Annual Rent Growth must be greater than or equal to ${min}%.')\n          .max(100, 'Annual Rent Growth must be less than or equal to ${max}%.')\n          .required()\n      },\n      {\n        id: 'expense_growth',\n        label: 'Annual Expense Growth',\n        inputType: 'text',\n        gridWidth: 3,\n        required: true,\n        defaultValue: '2',\n        endAdornment: '%',\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Annual Expense Growth must be greater than or equal to ${min}%.')\n          .max(100, 'Annual Expense Growth must be less than or equal to ${max}%.')\n          .required()\n      },\n      {\n        id: 'selling_expense_rate',\n        label: 'Selling Expense Rate',\n        inputType: 'text',\n        gridWidth: 3,\n        required: true,\n        formatWithCommas: true,\n        defaultValue: '8',\n        endAdornment: '%',\n        helperText: [\n          `Selling Expense Rate represents the commission paid to the realtor\n          upon the sale of your property.`,\n          `Generally, this totals 5-10% of total sale proceeds.`\n        ],\n        validator: yup\n          .number()\n          .transform(stringToNumberYupTransformer)\n          .min(0, 'Selling Expense Rate must be greater than or equal to ${min}%.')\n          .max(100, 'Selling Expense Rate must be less than or equal to ${max}%.')\n          .required()\n      },\n    ],\n  },\n];\n\nfunction generateInitialValues(tabs: TabType[]) {\n  const initialValues: { [key: string]: number | string }  = {};\n  _.forEach(tabs, (tab: TabType) => {\n    _.forEach(tab.formFields, (f: FormField) => {\n      initialValues[f.id] = f.defaultValue;\n    })\n  });\n  return initialValues;\n}\n\nfunction generateValidators(tabs: TabType[]) {\n  const validators: { [key: string]: yup.BaseSchema | undefined } = {};\n  _.forEach(tabs, (tab: TabType) => {\n    _.forEach(tab.formFields, (f: FormField) => {\n      validators[f.id] = f.validator;\n    })\n  });\n  return validators;\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '12px',\n  },\n  // https://stackoverflow.com/questions/55952086/writing-css-in-js-code-to-remove-arrow-buttons-from-textfield\n  number: {\n    \"& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\n      \"-webkit-appearance\": \"none\",\n      margin: 0\n    }\n  },\n  input: {\n    \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n      \"-webkit-appearance\": \"none\",\n      margin: 0\n    }\n  },\n  helpIcon: {\n    // TODO: Figure out what color is best here\n    color: \"grey\",\n  },\n  tabPanel: {\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 140,\n      width: 140,\n      lineHeight: 1.1,\n    },\n    [theme.breakpoints.up('md')]: {\n      minWidth: 140,\n      width: 140,\n      lineHeight: 1.4,\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    }\n  },\n  formGrid: {\n    [theme.breakpoints.down('sm')]: {\n      height: '160px',\n      minHeight: '160px',\n      overflow: 'scroll',\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '95px',\n      minHeight: '95px',\n    }\n  },\n}));\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      className={classes.formGrid}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\ntype FormGridProps = {\n  fields: FormField[],\n  formik: any,\n};\n\nfunction FormGrid({ fields, formik }: FormGridProps) {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2}>\n      {_.map(fields, (field: FormField) => {\n        const ConditionalComponent = field.formatWithCommas ? NumberFieldWithCommas : TextField;\n        \n        return (\n          // @ts-ignore\n          <Grid key={field.id} item xs={12} sm={12} md={field.gridWidth} lg={field.gridWidth} xl={field.gridWidth}>\n            <ConditionalComponent \n              id={field.id}\n              label={field.label}\n              // TODO: type clashes with react-number-format --> type:\tOne of ['text', 'tel', 'password']\n              // type={field.inputType}\n              required={field.required}\n              fullWidth // TODO: Consider styling options\n\n              // formik:\n              value={formik.values[field.id]}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur} // https://stackoverflow.com/a/57481493\n              error={formik.touched[field.id] && Boolean(formik.errors[field.id])}\n              helperText={formik.touched[field.id] && formik.errors[field.id]}\n\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                startAdornment: (\n                  field.startAdornment\n                    ? <InputAdornment position=\"start\">{field.startAdornment}</InputAdornment>\n                    : null\n                ),\n                endAdornment: (\n                  field.endAdornment\n                    ? (\n                      <InputAdornment position=\"start\">\n                        {field.endAdornment}\n                        {field.helperText && (\n                          <Tooltip title={<Paragraphs paragraphs={field.helperText}/>}>\n                            <Help fontSize=\"small\" style={{ marginLeft: '5px' }} className={classes.helpIcon} />\n                          </Tooltip>\n                        )}\n                      </InputAdornment>\n                    )\n                    : null\n                ),\n              }}\n              className={classes.number}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n          </Grid>\n        );\n      })}\n      {/* TODO: Consider adding button to go to next tab here */}\n    </Grid>\n  );\n}\n\ntype NewGenericTabsProps = {\n  tabs: TabType[],\n  formik: any,\n};\n\nfunction GenericTabs(props: NewGenericTabsProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const handleTabChange = useMemo(() => (event: React.ChangeEvent<{}>, newValue: number) => setValue(newValue), []);\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleTabChange}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          scrollButtons=\"off\"\n          variant=\"scrollable\"\n        >\n          {props.tabs.map((tab: TabType, idx) => (\n            <Tab key={idx} label={tab.tabTitle} {...a11yProps(idx)} className={classes.tabPanel} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {props.tabs.map((tab: TabType, idx) => (\n        <TabPanel key={idx} value={value} index={idx} dir={theme.direction}>\n          <FormGrid fields={tab.formFields} formik={props.formik} />\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\n// @ts-ignore\nconst validationSchema = yup.object(generateValidators(TABS));\n\n// TODO: pass TABS into this component in case it becomes API call later\nfunction AnalyzePage(props: any) {\n  const classes = useStyles();\n  const router = useRouter();\n\n  const formik = useFormik({\n    initialValues: generateInitialValues(TABS),\n    validationSchema,\n    onSubmit: v => console.log(v),\n    // TODO: Figure out validation\n    // validateOnBlur: true,\n  });\n\n  useEffect(() => {\n    router.history.replace('/analyze?' + stringify(formik.values));\n    formik.validateForm();\n  }, [formik.values]);\n\n  return (\n    // TODO: Utilize MUI theming / spacing\n    <Container className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          {/* TODO: Consider adding button allowing users to hide inputs */}\n          <form>\n            <GenericTabs tabs={TABS} formik={formik} />\n          </form>\n        </Grid>\n        <Grid item xs={12}>\n          <GoogleMapsSearchBar />\n          <div>\n            {_.map(formik.values, (v: string, k: string) => {\n              return <p key={k}>{`${k}: ${v}`}</p>\n            })}\n          </div>\n          <div>\n            {_.map(formik.errors, (v: string, k: string) => {\n              return <p key={k}>{`${k}: ${v}`}</p>\n            })}\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default AnalyzePage;\n","/Users/twn/Desktop/cf-analyzer-new/src/util/router.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/util/theme.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/Footer.tsx",["192","193","194","195"],"import React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"./../util/router\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport useDarkMode from \"use-dark-mode\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  sticky: {\n    marginTop: \"auto\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  item: {\n    display: \"flex\",\n    flex: \"none\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginBottom: 24,\n    [theme.breakpoints.up(\"sm\")]: {\n      flex: \"50%\",\n    },\n  },\n  brand: {\n    display: \"block\",\n    height: 32,\n  },\n  social: {\n    alignItems: \"flex-end\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    lineHeight: 1,\n    \"&:hover\": {\n      opacity: 0.8,\n    },\n    \"&:not(:first-of-type)\": {\n      marginLeft: 20,\n    },\n  },\n  left: {\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-start\",\n    },\n  },\n  right: {\n    [theme.breakpoints.up(\"sm\")]: {\n      justifyContent: \"flex-end\",\n    },\n  },\n  // Move links to end (bottom right)\n  // Swaps position with social\n  smallLinks: {\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 1,\n    },\n  },\n}));\n\nfunction Footer(props: any) {\n  const classes = useStyles();\n\n  const darkMode = useDarkMode();\n  // Use inverted logo if specified\n  // and we are in dark mode\n  const logo =\n    props.logoInverted && darkMode.value ? props.logoInverted : props.logo;\n\n  return (\n    <Section\n      bgColor={props.bgColor}\n      size={props.size}\n      bgImage={props.bgImage}\n      bgImageOpacity={props.bgImageOpacity}\n      className={props.sticky && classes.sticky}\n    >\n      <Container>\n        <div className={classes.wrapper}>\n          <div className={`${classes.item} ${classes.left}`}>\n            <Link to=\"/\">\n              <img src={logo} alt=\"Logo\" className={classes.brand} />\n            </Link>\n          </div>\n          <div\n            className={`${classes.item} ${classes.right} ${classes.smallLinks}`}\n          >\n            <Typography>\n              <Link to=\"/about\" className={classes.link}>\n                About\n              </Link>\n              <Link to=\"/faq\" className={classes.link}>\n                FAQ\n              </Link>\n              <Link to=\"/contact\" className={classes.link}>\n                Contact\n              </Link>\n              <a\n                href=\"https://medium.com\"\n                target=\"_blank\"\n                className={classes.link}\n              >\n                Blog\n              </a>\n            </Typography>\n          </div>\n          <div className={`${classes.item} ${classes.right} ${classes.social}`}>\n            <a\n              href=\"https://twitter.com/divjoy\"\n              target=\"_blank\"\n              className={classes.link}\n            >\n              <TwitterIcon fontSize=\"small\" />\n            </a>\n            <a\n              href=\"https://facebook.com/DivjoyOfficial\"\n              target=\"_blank\"\n              className={classes.link}\n            >\n              <FacebookIcon fontSize=\"small\" />\n            </a>\n            <a\n              href=\"https://instagram.com\"\n              target=\"_blank\"\n              className={classes.link}\n            >\n              <InstagramIcon fontSize=\"small\" />\n            </a>\n          </div>\n\n          {props.copyright && (\n            <div className={`${classes.item} ${classes.left}`}>\n              <Typography component=\"p\">{props.copyright}</Typography>\n            </div>\n          )}\n        </div>\n      </Container>\n    </Section>\n  );\n}\n\nexport default Footer;\n","/Users/twn/Desktop/cf-analyzer-new/src/components/Navbar.tsx",["196","197","198"],"import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link } from \"./../util/router\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// import { useAuth } from \"./../util/auth\";\nimport useDarkMode from \"use-dark-mode\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: 28,\n    marginRight: theme.spacing(2),\n  },\n  drawerList: {\n    width: 250,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar(props: any) {\n  const classes = useStyles();\n\n  // const auth = useAuth();\n  const darkMode = useDarkMode();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [menuState, setMenuState] = useState(null);\n\n  // Use inverted logo if specified\n  // and we are in dark mode\n  const logo =\n    props.logoInverted && darkMode.value ? props.logoInverted : props.logo;\n\n  const handleOpenMenu = (event: any, id: any) => {\n    // Store clicked element (to anchor the menu to)\n    // and the menu id so we can tell which menu is open.\n    // @ts-ignore\n    setMenuState({ anchor: event.currentTarget, id });\n  };\n\n  const handleCloseMenu = () => {\n    setMenuState(null);\n  };\n\n  return (\n    <Section bgColor={props.color} size=\"auto\">\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Container disableGutters={true}>\n          <Toolbar>\n            <Link to=\"/\">\n              <img src={logo} alt=\"Logo\" className={classes.logo} />\n            </Link>\n            <div className={classes.spacer} />\n            <Hidden mdUp={true} implementation=\"css\">\n              <IconButton\n                onClick={() => {\n                  setDrawerOpen(true);\n                }}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Hidden smDown={true} implementation=\"css\">\n              <Button color=\"inherit\" component={Link} to=\"/about\">\n                About\n              </Button>\n\n              <Button color=\"inherit\" component={Link} to=\"/pricing\">\n                Pricing\n              </Button>\n\n              <Button color=\"inherit\" component={Link} to=\"/faq\">\n                FAQ\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                component={Link}\n                to=\"/analyze\"\n              >\n                Analyze a Property\n              </Button>\n            </Hidden>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n      >\n        <List\n          className={classes.drawerList}\n          onClick={() => setDrawerOpen(false)}\n        >\n          <ListItem button={true} component={Link} to=\"/about\">\n            <ListItemText>About</ListItemText>\n          </ListItem>\n\n          <ListItem button={true} component={Link} to=\"/faq\">\n            <ListItemText>Pricing</ListItemText>\n          </ListItem>\n\n          <ListItem button={true} component={Link} to=\"/about\">\n            <ListItemText>FAQ</ListItemText>\n          </ListItem>\n\n          <ListItem button={true} component={Link} to=\"/analyze\">\n            <ListItemText>Analyze a Property</ListItemText>\n          </ListItem>\n        </List>\n      </Drawer>\n    </Section>\n  );\n}\n\nexport default Navbar;\n","/Users/twn/Desktop/cf-analyzer-new/src/components/FeaturesSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/TestimonialsSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/ClientsSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/CtaSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/HeroSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/HeroSection2.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/StatsSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/NewsletterSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/FaqSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/TeamBiosSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/PricingSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/ContactSection.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/Section.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/custom_components/google_maps_place.tsx",["199"],"/Users/twn/Desktop/cf-analyzer-new/src/components/SectionHeader.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/AspectRatio.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/Newsletter.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/Contact.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/components/BackgroundImage.tsx",[],"/Users/twn/Desktop/cf-analyzer-new/src/util/newsletter.ts",["200"],"import { apiRequest } from \"./util\";\n\nfunction subscribe(data: any) {\n  return apiRequest(\"newsletter\", \"POST\", data);\n}\n\nexport default { subscribe };\n","/Users/twn/Desktop/cf-analyzer-new/src/util/contact.ts",["201"],"const endpoint = `${process.env.REACT_APP_SHEETS_ENDPOINT}?tabId=${process.env.REACT_APP_SHEETS_TAB_ID}`;\n\n// @ts-ignore\nfunction submit(data) {\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify([[data.name, data.email, data.message]]),\n  }).then((r) => r.json());\n}\n\nexport default { submit };\n","/Users/twn/Desktop/cf-analyzer-new/src/util/util.ts",[],"/Users/twn/Desktop/cf-analyzer-new/src/util/firebase.ts",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":5,"column":73,"nodeType":"208","messageId":"209","endLine":5,"endColumn":87},{"ruleId":"210","severity":1,"message":"211","line":90,"column":19,"nodeType":"212","messageId":"213","endLine":90,"endColumn":77},{"ruleId":"210","severity":1,"message":"211","line":150,"column":19,"nodeType":"212","messageId":"213","endLine":150,"endColumn":86},{"ruleId":"210","severity":1,"message":"211","line":151,"column":21,"nodeType":"212","messageId":"213","endLine":151,"endColumn":85},{"ruleId":"210","severity":1,"message":"211","line":171,"column":19,"nodeType":"212","messageId":"213","endLine":171,"endColumn":76},{"ruleId":"210","severity":1,"message":"211","line":172,"column":21,"nodeType":"212","messageId":"213","endLine":172,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":188,"column":19,"nodeType":"212","messageId":"213","endLine":188,"endColumn":76},{"ruleId":"210","severity":1,"message":"211","line":218,"column":19,"nodeType":"212","messageId":"213","endLine":218,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":234,"column":19,"nodeType":"212","messageId":"213","endLine":234,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":249,"column":19,"nodeType":"212","messageId":"213","endLine":249,"endColumn":88},{"ruleId":"210","severity":1,"message":"211","line":277,"column":19,"nodeType":"212","messageId":"213","endLine":277,"endColumn":73},{"ruleId":"210","severity":1,"message":"211","line":278,"column":21,"nodeType":"212","messageId":"213","endLine":278,"endColumn":72},{"ruleId":"210","severity":1,"message":"211","line":301,"column":19,"nodeType":"212","messageId":"213","endLine":301,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":302,"column":21,"nodeType":"212","messageId":"213","endLine":302,"endColumn":74},{"ruleId":"210","severity":1,"message":"211","line":324,"column":19,"nodeType":"212","messageId":"213","endLine":324,"endColumn":75},{"ruleId":"210","severity":1,"message":"211","line":325,"column":21,"nodeType":"212","messageId":"213","endLine":325,"endColumn":74},{"ruleId":"210","severity":1,"message":"211","line":348,"column":19,"nodeType":"212","messageId":"213","endLine":348,"endColumn":87},{"ruleId":"210","severity":1,"message":"211","line":349,"column":21,"nodeType":"212","messageId":"213","endLine":349,"endColumn":86},{"ruleId":"210","severity":1,"message":"211","line":369,"column":19,"nodeType":"212","messageId":"213","endLine":369,"endColumn":87},{"ruleId":"210","severity":1,"message":"211","line":370,"column":21,"nodeType":"212","messageId":"213","endLine":370,"endColumn":86},{"ruleId":"210","severity":1,"message":"211","line":385,"column":19,"nodeType":"212","messageId":"213","endLine":385,"endColumn":81},{"ruleId":"210","severity":1,"message":"211","line":386,"column":21,"nodeType":"212","messageId":"213","endLine":386,"endColumn":80},{"ruleId":"210","severity":1,"message":"211","line":400,"column":19,"nodeType":"212","messageId":"213","endLine":400,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":401,"column":21,"nodeType":"212","messageId":"213","endLine":401,"endColumn":83},{"ruleId":"210","severity":1,"message":"211","line":421,"column":19,"nodeType":"212","messageId":"213","endLine":421,"endColumn":83},{"ruleId":"210","severity":1,"message":"211","line":422,"column":21,"nodeType":"212","messageId":"213","endLine":422,"endColumn":82},{"ruleId":"214","severity":1,"message":"215","line":656,"column":6,"nodeType":"216","endLine":656,"endColumn":21,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":104,"column":15,"nodeType":"220","endLine":108,"endColumn":16},{"ruleId":"218","severity":1,"message":"219","line":114,"column":13,"nodeType":"220","endLine":118,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":121,"column":13,"nodeType":"220","endLine":125,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":128,"column":13,"nodeType":"220","endLine":132,"endColumn":14},{"ruleId":"206","severity":1,"message":"221","line":38,"column":10,"nodeType":"208","messageId":"209","endLine":38,"endColumn":19},{"ruleId":"206","severity":1,"message":"222","line":45,"column":9,"nodeType":"208","messageId":"209","endLine":45,"endColumn":23},{"ruleId":"206","severity":1,"message":"223","line":52,"column":9,"nodeType":"208","messageId":"209","endLine":52,"endColumn":24},{"ruleId":"214","severity":1,"message":"224","line":166,"column":6,"nodeType":"216","endLine":166,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":7,"column":1,"nodeType":"228","endLine":7,"endColumn":30},{"ruleId":"226","severity":1,"message":"227","line":14,"column":1,"nodeType":"228","endLine":14,"endColumn":27},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"@typescript-eslint/no-unused-vars","'TextFieldProps' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik' and 'router.history'. Either include them or remove the dependency array.","ArrayExpression",["231"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'menuState' is assigned a value but never used.","'handleOpenMenu' is assigned a value but never used.","'handleCloseMenu' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'fetch', 'inputValue', and 'value'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOptions' needs the current value of 'value'.",["232"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [formik, formik.values, router.history]",{"range":"237","text":"238"},"Update the dependencies array to be: [fetch, inputValue, value]",{"range":"239","text":"240"},[20360,20375],"[formik, formik.values, router.history]",[4946,4948],"[fetch, inputValue, value]"]